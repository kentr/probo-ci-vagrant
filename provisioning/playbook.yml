---
- hosts: all
  become: yes

  vars_files:
    - vars/main.yml
    - ../default.config.yml

  pre_tasks:
    - name: Verify Ansible meets Drupal VM's version requirements.
      assert:
        that: "ansible_version.full | version_compare(drupalvm_ansible_version_min, '>=')"
        msg: >
          "You must update Ansible to at least {{ drupalvm_ansible_version_min }} to use this version of Drupal VM."

    - name: Define config_dir.
      set_fact:
        config_dir: "{{ playbook_dir }}/.."
      when: config_dir is not defined

    - include_vars: "{{ item }}"
      with_fileglob:
        - "{{ config_dir }}/config.yml"
        - "{{ config_dir }}/local.config.yml"
        - "{{ config_dir }}/{{ lookup('env', 'DRUPALVM_ENV')|default(drupalvm_env, true)|default(ansible_env.DRUPALVM_ENV)|default(omit) }}.config.yml"

    - include: tasks/init-debian.yml
      when: ansible_os_family == 'Debian'
    - include: tasks/init-redhat.yml
      when: ansible_os_family == 'RedHat'

    - name: Run configured pre-provision shell scripts.
      script: "{{ item }}"
      with_items: "{{ pre_provision_scripts|default([]) }}"

    - name: Run configured pre-provision ansible task files.
      include: "{{ item }}"
      with_fileglob:
        - "{{ pre_provision_tasks_dir|default(omit) }}"

#    - name: Set the PHP webserver daemon correctly when nginx is in use.
#      set_fact:
#        php_webserver_daemon: nginx
#      when: drupalvm_webserver == 'nginx'

  roles:
    # Essential roles.
    - { role: geerlingguy.repo-remi, when: ansible_os_family == 'RedHat' }
    - geerlingguy.firewall
    - geerlingguy.git
    - geerlingguy.nodejs
    - role: angstwad.docker_ubuntu
      docker_group_members: ["{{ vagrant_user }}"]
    - jacobwgillespie-ansible.rethinkdb

# Conditionally-installed roles.
#    - { role: geerlingguy.pimpmylog, when: '"pimpmylog" in installed_extras' }
#    - { role: geerlingguy.daemonize, when: '"mailhog" in installed_extras' }
#    - { role: geerlingguy.mailhog, when: '"mailhog" in installed_extras' }

    # Roles for security and stability on production.
    - { role: geerlingguy.security, when: extra_security_enabled }

  tasks:
#    - include: tasks/sshd.yml
#    - include: tasks/extras.yml

    - include: tasks/install-proboci.yml

    - name: Run configured post-provision shell scripts.
      script: "{{ item }}"
      with_items: "{{ post_provision_scripts|default([]) }}"

    - name: Run configured post-provision ansible task files.
      include: "{{ item }}"
      with_fileglob:
        - "{{ post_provision_tasks_dir|default(omit) }}"
